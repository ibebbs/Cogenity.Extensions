trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version: 1.0.0

steps:
- task: GitVersion@5
  displayName: 'GitVersion'
  inputs:
    updateAssemblyInfo: true

- script: echo %Action%%BuildVersion%
  displayName: 'Set build version'
  env:
    Action: '##vso[build.updatebuildnumber]'
    BuildVersion: $(GitVersion.SemVer)

- script: dotnet restore src/Microsoft.Extensions.Hosting.Composition.Abstractions/Microsoft.Extensions.Hosting.Composition.Abstractions.csproj
  displayName: 'Restore Microsoft.Extensions.Hosting.Composition.Abstractions.csproj'
- script: dotnet build src/Microsoft.Extensions.Hosting.Composition.Abstractions/Microsoft.Extensions.Hosting.Composition.Abstractions.csproj --configuration $(buildConfiguration) /p:Version='$(GitVersion.SemVer)'
  displayName: 'Build Microsoft.Extensions.Hosting.Composition.Abstractions.csproj'
- script: dotnet pack src/Microsoft.Extensions.Hosting.Composition.Abstractions/Microsoft.Extensions.Hosting.Composition.Abstractions.csproj --configuration $(buildConfiguration) -o '$(Build.ArtifactStagingDirectory)' /p:Version='$(GitVersion.NuGetVersionV2)'
  displayName: 'Pack Microsoft.Extensions.Hosting.Composition.Abstractions.csproj'

- script: dotnet restore src/Microsoft.Extensions.Hosting.Composition/Microsoft.Extensions.Hosting.Composition.csproj
  displayName: 'Restore Microsoft.Extensions.Hosting.Composition.csproj'
- script: dotnet build src/Microsoft.Extensions.Hosting.Composition/Microsoft.Extensions.Hosting.Composition.csproj --configuration $(buildConfiguration) /p:Version='$(GitVersion.SemVer)'
  displayName: 'Build Microsoft.Extensions.Hosting.Composition.csproj'
- script: dotnet pack src/Microsoft.Extensions.Hosting.Composition/Microsoft.Extensions.Hosting.Composition.csproj --configuration $(buildConfiguration) -o '$(Build.ArtifactStagingDirectory)' /p:Version='$(GitVersion.NuGetVersionV2)'
  displayName: 'Pack Microsoft.Extensions.Hosting.Composition.csproj'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: MyBuildOutputs
    
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    #packagesToPush: '$(Build.Repository.LocalPath)/**/*.nupkg;!$(Build.Repository.LocalPath)/**/*.symbols.nupkg'
    publishFeedCredentials: 'MyGet Bebbs Feed'
    verbosityPush: detailed

